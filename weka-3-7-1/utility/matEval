#!/usr/bin/php
<?php
/**
* Usage: matEval file -o entropy|purity|fmeasure|nmi|all
* the script evaluate the confusion (aquare) matrix of clustering result.
*/
$stdout="";
$file=file($argv[1],FILE_IGNORE_NEW_LINES);
$n=count($file);
$m=array();//matrix
$m1=array();//row
$m2=array();//column
$M=0;
for($i=0;$i<$n;$i++){
	$m[$i]=preg_split("/\s+/",trim($file[$i]));
	for($j=0;$j<$n;$j++){
		$m1[$i]+=$m[$i][$j];
		$m2[$j]+=$m[$i][$j];
		$M+=$m[$i][$j];
	}
}
$p=array();
$r=array();
$f=array();
$p1=array();
$p2=array();
$Entropy=array();
$Purity=array();
$Fuck=array();
for($i=0;$i<$n;$i++){
	$Entropy[$i]=0;
	$Purity[$i]=0;
	$p1[$i]=$m1[$i]/$M;
	$p2[$i]=$m2[$i]/$M;
	for($j=0;$j<$n;$j++){
		if($m[$i][$j]){
			$p[$i][$j]=$m[$i][$j]/$m1[$i];
			$r[$i][$j]=$m[$i][$j]/$m2[$j];
			$f[$i][$j]=(2*$p[$i][$j]*$r[$i][$j])/($p[$i][$j]+$r[$i][$j]);
			$Entropy[$i]+=-$p[$i][$j]*log($p[$i][$j],2);
			if($p[$i][$j]>$Purity[$i])$Purity[$i]=$p[$i][$j];
			if($f[$i][$j]>$Fuck[$j])$Fuck[$j]=$f[$i][$j];
		}else{
			$p[$i][$j]=0;
			$r[$i][$j]=0;
			$f[$i][$j]="-";
		}
		$stdout.=sprintf("%.3f/%.3f/%.3f ",$p[$i][$j],$r[$i][$j],$f[$i][$j]);
	}
	$stdout.=sprintf("%5d/%.3f/%.3f\n",$m1[$i],$Purity[$i],$Entropy[$i]);
}
$E=$P=$F=$H1=$H2=0;
for($i=0;$i<$n;$i++){
	$E+=$p1[$i]*$Entropy[$i];
	$P+=$p1[$i]*$Purity[$i];
	$F+=$p2[$i]*$Fuck[$i];
	$H1+=-$p1[$i]*log($p1[$i],2);
	$H2+=-$p2[$i]*log($p2[$i],2);
	$stdout.=sprintf("%11d/%.3f ",$m2[$i],$Fuck[$i]);
}
$NMI=($H2-$E)/sqrt($H1*$H2);
$stdout.=sprintf("%.3f/%.3f/%.3f\n",$F,$P,$E);
$opt=getopt("o:");
switch($opt['o']){
	case "entropy":
	for($i=0;$i<$n;$i++){
		printf("%.3f\n",$Entropy[$i]);
	}
	printf("%.3f\n",$E);
	break;
	case "purity":
	for($i=0;$i<$n;$i++){
		printf("%.3f\n",$Purity[$i]);
	}
	printf("%.3f\n",$P);
	break;
	case "fmeasure":
	for($i=0;$i<$n;$i++){
		printf("%.3f ",$Fuck[$i]);
	}
	printf("%.3f\n",$F);
	break;
	case "nmi":
	printf("%.3f\n",$NMI);
	break;
	case "all":
	printf("E=%.3f P=%.3f F=%.3f H1=%.3f H2=%.3f NMI=%.3f\n",$E,$P,$F,$H1,$H2,$NMI);
	break;
	default:
	echo $stdout;
	break;
}
?>
