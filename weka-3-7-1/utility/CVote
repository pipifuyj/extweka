#!/usr/bin/env php
<?php
/**
 * Read *.sample and *.label files and take some classifier result file paths, output voted result.
 * The classifier result file consists of lines like:
 *  index value probability
 * Notice: instance index in sample file starts from 1, in classifier result file starts from 0.
 */
function CVote($result){
    $R=array();
    $c=count($result);
    foreach($result as $r){
        $R[$r[0]]+=$r[1]/$c;
    }
    $value=null;
    $probability=0;
    $P=0;
    foreach($R as $v=>$p){
        if($p>$probability){
            $probability=$p;
            $value=$v;
        }
        $P+=$p;
    }
    $probability/=$P;
    return array($value,$probability);
}
ini_set("memory_limit","1G");
$predict=array();
$i=0;
while(is_file("$i.sample")){
    $sample=file("$i.sample",FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES);
    $label=file("$i.label",FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES);
    foreach($sample as $k=>$v){
        $predict[$v-1]=$label[$k];
    }
    $i++;
}
$result=array();
$i=1;
while(is_file($argv[$i])){
    $file=file($argv[$i],FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES);
    foreach($file as $line){
        $line=preg_split("/\s+/",$line);
        $result[$line[0]][$i]=array($line[1],$line[2]);
    }
    $i++;
}
foreach($result as &$r){
    $r=CVote($r);
    $r=$r[0]*$r[1];
}
$count=0;
for($i=0,$ii=count($predict)+count($result);$i<$ii;$i++){
    if(isset($predict[$i])){
        echo $predict[$i],"\n";
    }else{
        echo $result[$count],"\n";
        $count++;
    }
}
?>
